{"version":3,"sources":["./src/app/pages/characters/characters.page.html","./src/app/pages/characters/characters-routing.module.ts","./src/app/pages/characters/characters.module.ts","./src/app/pages/characters/characters.page.scss","./src/app/pages/characters/characters.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,yiBAA0e,kBAAkB,oc;;;;;;;;;;;;;;;;;;;ACAle;AACc;AAEJ;AAEnD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC5B;CACJ,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAI;AAA/B,2BAA2B;IAJvC,8DAAQ,CAAC;QACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KAC1B,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AAEA;AAE6B;AAEvB;AAWnD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAI;AAAxB,oBAAoB;IAThC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,sFAA2B;SAC9B;QACD,YAAY,EAAE,CAAC,+DAAc,CAAC;KACjC,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;ACnBjC;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;ACAX;AACT;AAEe;AAOxD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAOvB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAN3D,uDAAuD;QACvD,yCAAyC;QACzC,eAAU,GAAG,EAAE,CAAC;QAChB,WAAM,GAAG,CAAC,CAAC;QACX,qBAAgB,GAAG,EAAE,CAAC;IAEyC,CAAC;IAEhE,QAAQ;QACJ,yEAAyE;QACzE,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc,CAAC,KAAM;QACjB,sFAAsF;QACtF,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,4FAA4F;YAC5F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/C,qDAAqD;YACrD,IAAI,KAAK,EAAE;gBACP,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC3B;QACL,CAAC,CAAC;IACN,CAAC;IAED,QAAQ,CAAC,KAAM;QAEX,sFAAsF;QACtF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAC/B,8DAA8D;QAC9D,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE3B,uDAAuD;QACvD,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE;YACrC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;SAChC;IACL,CAAC;IAED,WAAW,CAAC,SAAS;QACjB,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,WAAW,EAAE,CAAC,CAAC;IACjE,CAAC;CACJ;;YArC+B,sDAAM;YAAe,gEAAU;;AAPlD,cAAc;IAL1B,+DAAS,CAAC;QACP,QAAQ,EAAE,gBAAgB;QAC1B,8NAAqC;;KAExC,CAAC;2EAQ8B,sDAAM,EAAe,gEAAU;GAPlD,cAAc,CA4C1B;AA5C0B","file":"characters-characters-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Characters</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\t<ion-searchbar [(ngModel)]=\\\"terms\\\"></ion-searchbar>\\n<!-- Code based upon: https://youtu.be/NBeExE9dvR0-->\\n\\t<ion-list>\\n\\t\\t<!-- I removed async because it is an Observable function and it doesn't work without -->\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of characters\\\" (click)=\\\"openDetails(character)\\\">\\n\\t\\t\\t{{ character.name }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\t<!-- the infinte scroll occurs when the sidebar is 20% to be completed -->\\n\\t<!-- as soon as it reaches the remaining 20%, the method is called to load more -->\\n\\t<ion-infinite-scroll threshold=\\\"20%\\\" (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t<ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data\\\">\\n\\t\\t</ion-infinite-scroll-content>\\n\\t</ion-infinite-scroll>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CharactersPage\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        CharactersPageRoutingModule\n    ],\n    declarations: [CharactersPage]\n})\nexport class CharactersPageModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n    //We need an array of characters, so we create an array\n    //Code from: https://youtu.be/NBeExE9dvR0\n    characters = [];\n    offset = 0;\n    numberCharacters = 63;\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        //Since this is the main function, we call ourselves the methods we want.\n        this.openCharacters();\n    }\n\n    openCharacters(event?) {\n        //This method calls the api and assumes that the offset parameter is passed to the API\n        this.api.getCharacters(this.offset).subscribe(data => {\n            //It shows on the console all the data of this method, in the form of an array of characters\n            console.log(data);\n            this.characters = this.characters.concat(data);\n            //Once the array is populated, the event is completed\n            if (event) {\n                event.target.complete();\n            }\n        })\n    }\n\n    loadMore(event?) {\n\n        //This calculation will increase the offset number by 20 every time the event happens \n        this.offset = this.offset + 20;\n        //as soon as the offset has been updated, run the method again\n        this.openCharacters(event);\n\n        //Method for when the number of characters is the limit\n        if (this.offset > this.numberCharacters) {\n            event.target.disabled = true;\n        }\n    }\n\n    openDetails(character) {\n        let characterId = character.char_id;\n        this.router.navigateByUrl(`/tabs/characters/${characterId}`);\n    }\n}"],"sourceRoot":"webpack:///"}