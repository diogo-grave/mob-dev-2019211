{"version":3,"sources":["src/app/pages/characters/characters.page.html","src/app/pages/characters/characters-routing.module.ts","src/app/pages/characters/characters.module.ts","src/app/pages/characters/characters.page.scss","src/app/pages/characters/characters.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-title>Characters</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n\\t<ion-searchbar [(ngModel)]=\\\"terms\\\"></ion-searchbar>\\n<!-- Code based upon: https://youtu.be/NBeExE9dvR0-->\\n\\t<ion-list>\\n\\t\\t<!-- I removed async because it is an Observable function and it doesn't work without -->\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let character of characters\\\" (click)=\\\"openDetails(character)\\\">\\n\\t\\t\\t{{ character.name }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\t<!-- the infinte scroll occurs when the sidebar is 20% to be completed -->\\n\\t<!-- as soon as it reaches the remaining 20%, the method is called to load more -->\\n\\t<ion-infinite-scroll threshold=\\\"20%\\\" (ionInfinite)=\\\"loadMore($event)\\\">\\n\\t\\t<ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data\\\">\\n\\t\\t</ion-infinite-scroll-content>\\n\\t</ion-infinite-scroll>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CharactersPage } from './characters.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CharactersPage\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class CharactersPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CharactersPageRoutingModule } from './characters-routing.module';\n\nimport { CharactersPage } from './characters.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        CharactersPageRoutingModule\n    ],\n    declarations: [CharactersPage]\n})\nexport class CharactersPageModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYXJhY3RlcnMvY2hhcmFjdGVycy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n    selector: 'app-characters',\n    templateUrl: './characters.page.html',\n    styleUrls: ['./characters.page.scss'],\n})\nexport class CharactersPage implements OnInit {\n    //We need an array of characters, so we create an array\n    //Code from: https://youtu.be/NBeExE9dvR0\n    characters = [];\n    offset = 0;\n    numberCharacters = 63;\n\n    constructor(private router: Router, private api: ApiService) { }\n\n    ngOnInit() {\n        //Since this is the main function, we call ourselves the methods we want.\n        this.openCharacters();\n    }\n\n    openCharacters(event?) {\n        //This method calls the api and assumes that the offset parameter is passed to the API\n        this.api.getCharacters(this.offset).subscribe(data => {\n            //It shows on the console all the data of this method, in the form of an array of characters\n            console.log(data);\n            this.characters = this.characters.concat(data);\n            //Once the array is populated, the event is completed\n            if (event) {\n                event.target.complete();\n            }\n        })\n    }\n\n    loadMore(event?) {\n\n        //This calculation will increase the offset number by 20 every time the event happens \n        this.offset = this.offset + 20;\n        //as soon as the offset has been updated, run the method again\n        this.openCharacters(event);\n\n        //Method for when the number of characters is the limit\n        if (this.offset > this.numberCharacters) {\n            event.target.disabled = true;\n        }\n    }\n\n    openDetails(character) {\n        let characterId = character.char_id;\n        this.router.navigateByUrl(`/tabs/characters/${characterId}`);\n    }\n}"],"sourceRoot":"webpack:///","file":"characters-characters-module-es5.js"}